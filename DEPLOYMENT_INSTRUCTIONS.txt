═══════════════════════════════════════════════════════════════
  SOLANA MEV BOT - GCP CLOUD RUN DEPLOYMENT INSTRUCTIONS
═══════════════════════════════════════════════════════════════

📋 PREREQUISITES:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. ✅ GCP Account with billing enabled
2. ✅ Access to GCP Cloud Shell (free, browser-based terminal)

═══════════════════════════════════════════════════════════════
🚀 DEPLOYMENT METHOD 1: CLOUD SHELL (EASIEST)
═══════════════════════════════════════════════════════════════

Step 1: Open GCP Cloud Shell
-----------------------------
1. Go to: https://console.cloud.google.com/
2. Click the ">_" icon in top-right corner
3. Wait for Cloud Shell to initialize

Step 2: Run Deployment Command
-------------------------------
Copy and paste this ONE COMMAND into Cloud Shell:

curl -sSL https://raw.githubusercontent.com/Panith-qc/Solana_Arbitrage/main/GCP_DEPLOY_NOW.sh | bash

That's it! Wait 5-7 minutes and your bot will be live.

═══════════════════════════════════════════════════════════════
🛠️  DEPLOYMENT METHOD 2: MANUAL (STEP-BY-STEP)
═══════════════════════════════════════════════════════════════

Step 1: Open GCP Cloud Shell
-----------------------------
https://console.cloud.google.com/

Step 2: Clone Repository
-------------------------
git clone https://github.com/Panith-qc/Solana_Arbitrage.git
cd Solana_Arbitrage

Step 3: Make Script Executable
-------------------------------
chmod +x GCP_DEPLOY_NOW.sh

Step 4: Run Deployment
-----------------------
./GCP_DEPLOY_NOW.sh

═══════════════════════════════════════════════════════════════
📝 MANUAL DEPLOYMENT (CUSTOM CONFIGURATION)
═══════════════════════════════════════════════════════════════

If you want to customize settings:

# Set your project ID
export PROJECT_ID="your-project-id"

# Deploy with custom settings
gcloud run deploy solana-mev-bot \
  --source . \
  --platform managed \
  --region us-central1 \
  --allow-unauthenticated \
  --memory 2Gi \
  --cpu 2 \
  --min-instances 1 \
  --max-instances 3 \
  --timeout 3600 \
  --port 8080 \
  --project $PROJECT_ID

═══════════════════════════════════════════════════════════════
🔍 AFTER DEPLOYMENT
═══════════════════════════════════════════════════════════════

1. You'll get a URL like:
   https://solana-mev-bot-xxxxx-uc.a.run.app

2. Open that URL in your browser

3. Enter your wallet details:
   - Private key (or connect wallet)
   - Select risk profile (Balanced recommended)

4. Click "Start Auto-Trading"

5. Open browser console (F12) to see real-time activity:
   - Scans every 3 seconds
   - All checks visible
   - Profit calculations shown
   - Trades executed when found

═══════════════════════════════════════════════════════════════
📊 MONITORING YOUR BOT
═══════════════════════════════════════════════════════════════

View Logs in Real-Time:
-----------------------
gcloud run services logs read solana-mev-bot --region us-central1 --follow

View Metrics Dashboard:
------------------------
https://console.cloud.google.com/run

Stop/Delete Service:
--------------------
gcloud run services delete solana-mev-bot --region us-central1

Update to Latest Version:
--------------------------
cd Solana_Arbitrage
git pull origin main
./GCP_DEPLOY_NOW.sh

═══════════════════════════════════════════════════════════════
❓ TROUBLESHOOTING
═══════════════════════════════════════════════════════════════

Issue: "No GCP project set"
Solution:
  gcloud config set project YOUR_PROJECT_ID

Issue: "APIs not enabled"
Solution:
  gcloud services enable cloudbuild.googleapis.com
  gcloud services enable run.googleapis.com

Issue: "Permission denied"
Solution:
  Make sure billing is enabled on your GCP account

Issue: "Service not accessible"
Solution:
  Check Cloud Run logs:
  gcloud run services logs read solana-mev-bot --region us-central1

Issue: "Bot not finding trades"
Solution:
  This is normal! Most scans won't find profitable trades.
  You'll see WHY in the logs - profit too low, etc.
  Lower minProfitUsd in config for more trades (smaller margins)

═══════════════════════════════════════════════════════════════
💰 COST ESTIMATE
═══════════════════════════════════════════════════════════════

Cloud Run Pricing (Approximate):
- 2 vCPU, 2GB RAM, always-on: ~$50-70/month
- Plus network egress: ~$10-20/month
- Total: ~$60-90/month

Free Tier:
- First 2 million requests/month: FREE
- 360,000 vCPU-seconds/month: FREE
- 180,000 GiB-seconds/month: FREE

Your bot will likely stay within free tier if just scanning!

═══════════════════════════════════════════════════════════════
✅ WHAT TO EXPECT
═══════════════════════════════════════════════════════════════

Normal Operation:
-----------------
✅ Scan every 3 seconds
✅ 9 token checks per scan
✅ Most scans show "No profitable trades" - THIS IS NORMAL
✅ You'll see WHY (profit too low)

When Trade Found:
-----------------
💰 FOUND PROFITABLE OPPORTUNITY!
🚀 EXECUTING TRADE...
✅ Trade complete - Profit: $X.XX

Console Output:
-----------------
🔍 [3:45:01 PM] MEV SCAN #1 - Checking 4 tokens...
   🔄 Checking: SOL → JUP → SOL (0.10 SOL)
      👉 Result: 0.099978 SOL | Profit: $-0.0043 | ❌ Too low
   🔄 Checking: SOL → BONK → SOL (0.10 SOL)
      💰 PROFITABLE! 0.100234 SOL | Profit: $0.045 | ✅ EXECUTE!

❌ Scan #1 complete: No profitable trades found (2847ms)

═══════════════════════════════════════════════════════════════
🔐 SECURITY NOTES
═══════════════════════════════════════════════════════════════

⚠️  Your private key is stored in browser memory only
⚠️  Never deployed or saved to GCP servers
⚠️  Only you have access to your wallet
⚠️  Use a dedicated trading wallet, not your main wallet
⚠️  Start with small amounts to test

═══════════════════════════════════════════════════════════════
📞 SUPPORT
═══════════════════════════════════════════════════════════════

Repository: https://github.com/Panith-qc/Solana_Arbitrage
Docs: See README.md and *.md files in repository

═══════════════════════════════════════════════════════════════

Ready to deploy? Run this in GCP Cloud Shell:

curl -sSL https://raw.githubusercontent.com/Panith-qc/Solana_Arbitrage/main/GCP_DEPLOY_NOW.sh | bash

═══════════════════════════════════════════════════════════════
